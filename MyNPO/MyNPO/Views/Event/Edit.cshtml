@model MyNPO.Models.Event

@{

}

<h2>Edit Event</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelForModel("Event Name", htmlAttributes: new { @class = "control-label col-md-2", name = "Event Name" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", type = "text", name = "EventName", placeholder = "Event Name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", type = "text", name = "EventName", placeholder = "Event Name" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelForModel("Event Location", htmlAttributes: new { @class = "control-label col-md-2", name = "Event Location" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", type = "text", name = "Event Location", placeholder = "Event Location" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger", type = "text", name = "Event Location", placeholder = "Event Location" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelForModel("Event Description", htmlAttributes: new { @class = "control-label col-md-2", name = "Event Description" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control", type = "text", name = "Event Description", placeholder = "Event Location" } })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger", type = "text", name = "Event Description", placeholder = "Event Location" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelForModel("Event-StartDate", htmlAttributes: new { @class = "control-label col-md-2", name = "Event-StartDate" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "datetime-local", name = "EventStartDate", placeholder = "StartDate: MM/dd/yyyy HH:mm:ss" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger", type = "datetime-local", name = "EventStartDate", placeholder = "StartDate: MM/dd/yyyy HH:mm:ss" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelForModel("Event-EndDate", htmlAttributes: new { @class = "control-label col-md-2", name = "Event-EndDate" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", type = "datetime-local", name = "EventEndDate", placeholder = "EndDate: MM/dd/yyyy HH:mm:ss" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger", type = "datetime-local", name = "EventEndDate", placeholder = "EndDate: MM/dd/yyyy HH:mm:ss" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelForModel("Select Image/Video", htmlAttributes: new { @class = "control-label col-md-2", name = "Select Image/Video" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UploadFileName, new { htmlAttributes = new { @class = "form-control", type = "file", id = "dataFile", name = "postedFile", accept = "image/*,video/*" } })
                @Html.ValidationMessageFor(model => model.UploadFileName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
